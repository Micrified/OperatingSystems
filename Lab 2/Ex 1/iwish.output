Grammar

    0 $accept: program $end

    1 program: linebreak complete_commands linebreak I_EOF
    2        | linebreak I_EOF

    3 complete_commands: complete_commands newline_list complete_command
    4                  | complete_command

    5 complete_command: list separator_op
    6                 | list

    7 list: list separator_op pipe_sequence
    8     | pipe_sequence

    9 pipe_sequence: simple_command

   10 $@1: %empty

   11 pipe_sequence: pipe_sequence PIPE $@1 linebreak simple_command

   12 simple_command: cmd_name cmd_suffix
   13               | cmd_name

   14 cmd_name: WORD

   15 cmd_suffix: io_file
   16           | cmd_suffix io_file
   17           | WORD
   18           | cmd_suffix WORD

   19 $@2: %empty

   20 io_file: REDIR_IN $@2 filename

   21 $@3: %empty

   22 io_file: REDIR_OUT $@3 filename

   23 filename: WORD

   24 newline_list: NEWLINE
   25             | newline_list NEWLINE

   26 linebreak: newline_list
   27          | %empty

   28 separator_op: AMPERSAND
   29             | SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
WORD (258) 14 17 18 23
NEWLINE (259) 24 25
AMPERSAND (260) 28
SEMICOLON (261) 29
REDIR_IN (262) 20
REDIR_OUT (263) 22
PIPE (264) 11
I_EOF (265) 1 2


Nonterminals, with rules where they appear

$accept (11)
    on left: 0
program (12)
    on left: 1 2, on right: 0
complete_commands (13)
    on left: 3 4, on right: 1 3
complete_command (14)
    on left: 5 6, on right: 3 4
list (15)
    on left: 7 8, on right: 5 6 7
pipe_sequence (16)
    on left: 9 11, on right: 7 8 11
$@1 (17)
    on left: 10, on right: 11
simple_command (18)
    on left: 12 13, on right: 9 11
cmd_name (19)
    on left: 14, on right: 12 13
cmd_suffix (20)
    on left: 15 16 17 18, on right: 12 16 18
io_file (21)
    on left: 20 22, on right: 15 16
$@2 (22)
    on left: 19, on right: 20
$@3 (23)
    on left: 21, on right: 22
filename (24)
    on left: 23, on right: 20 22
newline_list (25)
    on left: 24 25, on right: 3 25 26
linebreak (26)
    on left: 26 27, on right: 1 2 11
separator_op (27)
    on left: 28 29, on right: 5 7


State 0

    0 $accept: . program $end

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 27 (linebreak)

    program       go to state 2
    newline_list  go to state 3
    linebreak     go to state 4


State 1

   24 newline_list: NEWLINE .

    $default  reduce using rule 24 (newline_list)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

   25 newline_list: newline_list . NEWLINE
   26 linebreak: newline_list .

    NEWLINE  shift, and go to state 6

    $default  reduce using rule 26 (linebreak)


State 4

    1 program: linebreak . complete_commands linebreak I_EOF
    2        | linebreak . I_EOF

    WORD   shift, and go to state 7
    I_EOF  shift, and go to state 8

    complete_commands  go to state 9
    complete_command   go to state 10
    list               go to state 11
    pipe_sequence      go to state 12
    simple_command     go to state 13
    cmd_name           go to state 14


State 5

    0 $accept: program $end .

    $default  accept


State 6

   25 newline_list: newline_list NEWLINE .

    $default  reduce using rule 25 (newline_list)


State 7

   14 cmd_name: WORD .

    $default  reduce using rule 14 (cmd_name)


State 8

    2 program: linebreak I_EOF .

    $default  reduce using rule 2 (program)


State 9

    1 program: linebreak complete_commands . linebreak I_EOF
    3 complete_commands: complete_commands . newline_list complete_command

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 27 (linebreak)

    newline_list  go to state 15
    linebreak     go to state 16


State 10

    4 complete_commands: complete_command .

    $default  reduce using rule 4 (complete_commands)


State 11

    5 complete_command: list . separator_op
    6                 | list .
    7 list: list . separator_op pipe_sequence

    AMPERSAND  shift, and go to state 17
    SEMICOLON  shift, and go to state 18

    $default  reduce using rule 6 (complete_command)

    separator_op  go to state 19


State 12

    8 list: pipe_sequence .
   11 pipe_sequence: pipe_sequence . PIPE $@1 linebreak simple_command

    PIPE  shift, and go to state 20

    $default  reduce using rule 8 (list)


State 13

    9 pipe_sequence: simple_command .

    $default  reduce using rule 9 (pipe_sequence)


State 14

   12 simple_command: cmd_name . cmd_suffix
   13               | cmd_name .

    WORD       shift, and go to state 21
    REDIR_IN   shift, and go to state 22
    REDIR_OUT  shift, and go to state 23

    $default  reduce using rule 13 (simple_command)

    cmd_suffix  go to state 24
    io_file     go to state 25


State 15

    3 complete_commands: complete_commands newline_list . complete_command
   25 newline_list: newline_list . NEWLINE
   26 linebreak: newline_list .

    WORD     shift, and go to state 7
    NEWLINE  shift, and go to state 6

    $default  reduce using rule 26 (linebreak)

    complete_command  go to state 26
    list              go to state 11
    pipe_sequence     go to state 12
    simple_command    go to state 13
    cmd_name          go to state 14


State 16

    1 program: linebreak complete_commands linebreak . I_EOF

    I_EOF  shift, and go to state 27


State 17

   28 separator_op: AMPERSAND .

    $default  reduce using rule 28 (separator_op)


State 18

   29 separator_op: SEMICOLON .

    $default  reduce using rule 29 (separator_op)


State 19

    5 complete_command: list separator_op .
    7 list: list separator_op . pipe_sequence

    WORD  shift, and go to state 7

    $default  reduce using rule 5 (complete_command)

    pipe_sequence   go to state 28
    simple_command  go to state 13
    cmd_name        go to state 14


State 20

   11 pipe_sequence: pipe_sequence PIPE . $@1 linebreak simple_command

    $default  reduce using rule 10 ($@1)

    $@1  go to state 29


State 21

   17 cmd_suffix: WORD .

    $default  reduce using rule 17 (cmd_suffix)


State 22

   20 io_file: REDIR_IN . $@2 filename

    $default  reduce using rule 19 ($@2)

    $@2  go to state 30


State 23

   22 io_file: REDIR_OUT . $@3 filename

    $default  reduce using rule 21 ($@3)

    $@3  go to state 31


State 24

   12 simple_command: cmd_name cmd_suffix .
   16 cmd_suffix: cmd_suffix . io_file
   18           | cmd_suffix . WORD

    WORD       shift, and go to state 32
    REDIR_IN   shift, and go to state 22
    REDIR_OUT  shift, and go to state 23

    $default  reduce using rule 12 (simple_command)

    io_file  go to state 33


State 25

   15 cmd_suffix: io_file .

    $default  reduce using rule 15 (cmd_suffix)


State 26

    3 complete_commands: complete_commands newline_list complete_command .

    $default  reduce using rule 3 (complete_commands)


State 27

    1 program: linebreak complete_commands linebreak I_EOF .

    $default  reduce using rule 1 (program)


State 28

    7 list: list separator_op pipe_sequence .
   11 pipe_sequence: pipe_sequence . PIPE $@1 linebreak simple_command

    PIPE  shift, and go to state 20

    $default  reduce using rule 7 (list)


State 29

   11 pipe_sequence: pipe_sequence PIPE $@1 . linebreak simple_command

    NEWLINE  shift, and go to state 1

    $default  reduce using rule 27 (linebreak)

    newline_list  go to state 3
    linebreak     go to state 34


State 30

   20 io_file: REDIR_IN $@2 . filename

    WORD  shift, and go to state 35

    filename  go to state 36


State 31

   22 io_file: REDIR_OUT $@3 . filename

    WORD  shift, and go to state 35

    filename  go to state 37


State 32

   18 cmd_suffix: cmd_suffix WORD .

    $default  reduce using rule 18 (cmd_suffix)


State 33

   16 cmd_suffix: cmd_suffix io_file .

    $default  reduce using rule 16 (cmd_suffix)


State 34

   11 pipe_sequence: pipe_sequence PIPE $@1 linebreak . simple_command

    WORD  shift, and go to state 7

    simple_command  go to state 38
    cmd_name        go to state 14


State 35

   23 filename: WORD .

    $default  reduce using rule 23 (filename)


State 36

   20 io_file: REDIR_IN $@2 filename .

    $default  reduce using rule 20 (io_file)


State 37

   22 io_file: REDIR_OUT $@3 filename .

    $default  reduce using rule 22 (io_file)


State 38

   11 pipe_sequence: pipe_sequence PIPE $@1 linebreak simple_command .

    $default  reduce using rule 11 (pipe_sequence)
